{"version":3,"sources":["hooks.js","context.js","components/LongPress.js","components/Cell/index.js","components/Board/index.js","components/Display/index.js","bombsniffer.js","App.js","serviceWorker.js","index.js"],"names":["Dispatch","createContext","GameDone","LongPress","shouldShortPress","moved","state","touch","startTimeout","timeout","setTimeout","longPressed","props","time","onLongPress","cancelTimeout","clearTimeout","onTouchStart","e","onTouchEnd","onPress","onTouchCancel","onMove","onTouchMove","document","createEvent","this","setState","children","disabled","onContextMenu","preventDefault","style","WebkitUserSelect","WebkitTouchCallout","React","cloneElement","Component","defaultProps","Cell","adjacentBombCount","bombed","flagged","location","revealed","gameDone","useContext","dispatch","select","type","Date","now","toggleFlagged","evt","className","filter","Boolean","join","isVisibleBomb","center","icon","onClick","data-adjacent-bomb-count","library","add","faBomb","faFlag","Board","rows","map","row","i","Row","cells","key","cell","faDizzy","faGrimace","faGrinBeamSweat","faSmile","iconsByGameDone","win","lose","false","Display","newGame","useCallback","formatDigits","n","toString","padStart","bombsRemaining","elapsedSeconds","makeBoard","width","height","bombCount","new","Array","_","r","c","adjacentFlagCount","copy","board","column","count","Math","floor","random","forEachAdjacent","adjacent","initialize","getCell","isDone","revealRegion","revealUnflaggedAdjacentRegions","isLose","counts","getCounts","isWin","k","visited","Set","recur","has","clear","fn","boardSpec","reset","B","startTime","endTime","reducer","action","neighbor","Error","App","args","useReducerWithDevtools","useReducer","currentTime","useState","setCurrentTime","useEffect","request","requestAnimationFrame","updateTime","cancelAnimationFrame","useCurrentTime","Provider","value","window","hostname","match","ReactDOM","render","name","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d93b809f.chunk.js","sourcesContent":["import React from 'react'\nimport {StateInspector, useReducer as useReducerWithDevtools} from \"reinspect\"\n// import {useState as useStateWithDevtools} from \"reinspect\"\nexport function WithDevtools(props) {\n  return (\n    <StateInspector name=\"App\">\n      {props.children}\n    </StateInspector>\n  )\n}\nexport let useReducer = (...args) => useReducerWithDevtools(...args, state => state, \"App\")\n// export let useState   = (...args) => useStateWithDevtools  (...args,                 \"App\")\n\nexport {useEffect, useContext, useRef} from 'react'\n\n// export {useReducer} from 'react'\nexport {useState} from 'react'\nexport {useCallback} from 'react'\n// export function WithDevtools(props) {\n//   return props.children\n// }","import {createContext} from 'react'\n\nexport let Dispatch = createContext()\nexport let GameDone = createContext()","import React, {Component} from 'react';\n\nclass LongPress extends Component {\n  shouldShortPress = true;\n  moved = false;\n\n  state = {\n    touch: true\n  };\n\n  static defaultProps = {\n    time: 500\n  };\n\n  componentDidMount() {\n    try {\n      document.createEvent('TouchEvent');\n    } catch (e) {\n      // touch is not available, disable handlers\n      this.setState({touch: false});\n    }\n  }\n\n  componentWillUnmount() {\n    this.cancelTimeout();\n  }\n\n  startTimeout = () => {\n    this.timeout = setTimeout(this.longPressed, this.props.time);\n  };\n\n  longPressed = () => {\n    this.shouldShortPress = false;\n    if (this.props.onLongPress && this.moved === false) {\n      this.props.onLongPress();\n    }\n  };\n\n  cancelTimeout = () => {\n    clearTimeout(this.timeout);\n  };\n\n  onTouchStart = e => {\n    this.shouldShortPress = true;\n    this.moved = false;\n    this.startTimeout();\n    if (typeof this.props.onTouchStart === 'function') {\n      this.props.onTouchStart(e);\n    }\n  };\n\n  onTouchEnd = e => {\n    this.cancelTimeout();\n    if (this.props.onPress && this.shouldShortPress && this.moved === false) {\n      this.props.onPress();\n    }\n    if (typeof this.props.onTouchEnd === 'function') {\n      this.props.onTouchEnd(e);\n    }\n  };\n\n  onTouchCancel = e => {\n    this.cancelTimeout();\n    if (typeof this.props.onTouchCancel === 'function') {\n      this.props.onTouchCancel(e);\n    }\n  };\n\n  onMove = e => {\n    this.moved = true;\n    if (typeof this.props.onTouchMove === 'function') {\n      this.props.onTouchMove(e);\n    }\n  };\n\n  render() {\n    const {children, disabled} = this.props;\n    const {touch} = this.state;\n\n    if (!touch || disabled) {\n      return children;\n    }\n\n    const props = {\n      onContextMenu: e => e.preventDefault(),\n      onTouchStart: this.onTouchStart,\n      onTouchEnd: this.onTouchEnd,\n      onTouchMove: this.onMove,\n      onTouchCancel: this.onTouchCancel,\n      style: {\n        ...children.props.style,\n        WebkitUserSelect: 'none',\n        WebkitTouchCallout: 'none'\n      }\n    };\n\n    return React.cloneElement(children, {...children.props, ...props});\n  }\n}\n\nexport default LongPress;","import React from 'react'\nimport LongPress from \"../LongPress\"\nimport {Dispatch, GameDone} from \"../../context\"\nimport {useContext} from \"../../hooks\"\nimport {FontAwesomeIcon as Icon} from '@fortawesome/react-fontawesome'\nimport {library} from \"@fortawesome/fontawesome-svg-core\"\nimport {faBomb, faFlag} from \"@fortawesome/free-solid-svg-icons\"\nimport \"./index.css\"\nlibrary.add(faBomb, faFlag)\n\n\nexport default function Cell(props) {\n  let {adjacentBombCount, bombed, flagged, location, revealed} = props\n  let gameDone = useContext(GameDone)\n  let dispatch = useContext(Dispatch)\n  let select = () => {\n    if (!flagged && !gameDone)\n      dispatch({type: 'select',        location: location, time: Date.now()})\n  }\n  let toggleFlagged = (evt) => {\n    if (evt) evt.preventDefault()\n    if (!revealed && !gameDone)\n      dispatch({type: 'toggleFlagged', location: location, time: Date.now()})\n  }\n  let className = [\n      \"cell\",\n      flagged  && \"flagged\",\n      revealed && \"revealed\",\n      gameDone && bombed && \"bombed\"\n    ]\n    .filter(Boolean).join(\" \")\n  let isVisibleBomb = bombed && (revealed || gameDone) && !flagged\n  let center =\n      flagged                           ? <Icon icon=\"flag\" />\n    : isVisibleBomb                     ? <Icon icon=\"bomb\" />\n    : revealed && adjacentBombCount > 0 ? adjacentBombCount\n    : null\n  return (\n    <LongPress\n      time={500}\n      onLongPress={toggleFlagged}\n      onPress={select}\n    >\n      <span\n        className={className}\n        onClick={select}\n        onContextMenu={toggleFlagged}\n        data-adjacent-bomb-count={revealed ? adjacentBombCount : null}\n      >\n        {center}\n      </span>\n    </LongPress>\n  )\n}","import React, {useContext} from 'react'\nimport {GameDone} from \"../../context\"\nimport Cell from \"../Cell\"\nimport \"./index.css\"\n\nexport default function Board(props) {\n  let rows = props.rows.map((row, i) => <Row cells={row} key={i} />)\n  let gameDone = useContext(GameDone)\n  let className = [\n      \"board\",\n      gameDone && \"game-done\"\n    ]\n    .filter(Boolean).join(\" \")\n  return (\n    <div className={className}>\n      {rows}\n    </div>\n  )\n}\n\nfunction Row(props) {\n  let cells = props.cells.map(cell => <Cell {...cell} key={cell.location} />)\n  return (\n    <span className=\"row\">\n      {cells}\n    </span>\n  )\n}","import React from 'react'\nimport {useContext, useCallback} from \"../../hooks\"\nimport {Dispatch, GameDone} from \"../../context\"\nimport {FontAwesomeIcon as Icon} from '@fortawesome/react-fontawesome'\nimport {library} from \"@fortawesome/fontawesome-svg-core\"\nimport {faDizzy, faGrimace, faGrinBeamSweat, faSmile} from \"@fortawesome/free-solid-svg-icons\"\nimport \"./index.css\"\nlibrary.add(faDizzy, faGrimace, faGrinBeamSweat, faSmile)\n\nfunction Display(props) {\n  let dispatch = useContext(Dispatch)\n  let newGame = useCallback(() => dispatch({type: 'newGame'}), [dispatch])\n  let gameDone = useContext(GameDone)\n  let icon = iconsByGameDone[gameDone]\n  let formatDigits = n => (n % 1000).toString(10).padStart(3, \"0\")\n  return (\n    <div className=\"header\">\n      <div className=\"bombs-remaining numbers\">\n        {formatDigits(props.bombsRemaining)}\n      </div>\n      <button className=\"new-game\" onClick={newGame}>\n        <Icon icon={icon} />\n      </button>\n      <div className=\"elapsed-seconds numbers\">\n        {formatDigits(props.elapsedSeconds)}\n      </div>\n    </div>\n  )\n}\n\nlet iconsByGameDone = {\n  win: faGrinBeamSweat,\n  lose: faDizzy,\n  false: faSmile\n}\n\nexport default Display;\n","export function makeBoard({width, height, bombCount}) {\n  let rows =\n    [...Array(height)].map((_, r) =>\n      [...Array(width)].map((_, c) => ({\n        bombed: false,\n        flagged: false,\n        revealed: false,\n        // Denormalized context:\n        location: [r, c],\n        adjacentBombCount: 0,\n        adjacentFlagCount: 0\n      })))\n  return {new: true, rows, bombCount, height, width}\n}\n\nexport function copy(board) {\n  let rows = board.rows.map(row => row.map(cell => ({...cell})))\n  return {...board, rows}\n}\n\nexport function toggleFlagged(board, location) {\n  let cell = getCell(board, location)\n  if (isDone(board) || cell.revealed) return board\n  cell.flagged = !cell.flagged\n  forEachAdjacent(board, location, (neighbor) => neighbor.adjacentFlagCount += cell.flagged ? 1 : -1)\n  return board\n}\n\nexport function select(board, location) {\n  if (board.new) {\n    initialize(board, location)\n  } \n  let cell = getCell(board, location)\n  if (cell.flagged || isDone(board)) return board\n  if (!cell.revealed) {\n    cell.revealed = true\n    if (!cell.bombed) revealRegion(board, location)\n  }\n  else if (cell.adjacentBombCount === cell.adjacentFlagCount) {\n    revealUnflaggedAdjacentRegions(board, location)\n  }\n  return board\n}\n\nexport function isDone(board) {\n  return (\n      isLose(board) ? 'lose'\n    : isWin(board)  ? 'win'\n    : false\n  )\n}\n\nexport function isLose(board) {\n  for (let row of board.rows) for (let cell of row)\n    if (cell.revealed && cell.bombed) return true\n  return false\n}\n\nexport function isWin(board) {\n  if (isLose(board)) return false\n  let counts = getCounts(board)\n  let isWon = counts.cells === counts.flagged + counts.revealed\n  return isWon \n}\n\nexport function getCounts(board) {\n  let counts = {\n    bombed:   0,\n    flagged:  0,\n    revealed: 0\n  }\n  for (let row of board.rows) for (let cell of row)\n    for (let k in counts) if (cell[k]) counts[k]++\n  counts.cells = board.width * board.height\n  return counts\n}\n\nfunction getCell(board, location) {\n  let [row, column] = location\n  return board.rows[row][column]\n}\n\nfunction initialize(board, location) {\n  board.new = false\n  let {rows, bombCount, width, height} = board\n  let [row, column] = location\n  let count = 0\n  // Pick bomb locations\n  while (count < bombCount) {\n    let r = Math.floor(height * Math.random())\n    let c = Math.floor(width  * Math.random())\n    let tooClose =\n         row    - 1 <= r && r <= row    + 1\n      && column - 1 <= c && c <= column + 1\n    if (tooClose || rows[r][c].bombed) continue\n    rows[r][c].bombed = true\n    count++\n  }\n  // Update `adjacentBombCount`\n  for (let r = 0; r < board.height; r++)\n    for (let c = 0; c < board.width; c++) {\n      board.rows[r][c].adjacentBombCount = 0\n      forEachAdjacent(board, [r, c], (adjacent) => adjacent.bombed && board.rows[r][c].adjacentBombCount++)\n    }\n  return board\n}\n\nfunction revealUnflaggedAdjacentRegions(board, location) {\n  forEachAdjacent(board, location, (adjacent) => {\n    if (!adjacent.flagged)\n      adjacent.revealed = true\n  })\n  if (isDone(board)) return\n  forEachAdjacent(board, location, (adjacent) => {\n    if (!adjacent.flagged && 0 === adjacent.adjacentBombCount)\n      revealRegion(board, adjacent.location)\n  })\n  return board\n}\n\nlet visited = new Set()\n\n// Reveal cell\n// If no adjacent bombs, reveal regions of unflagged adjacents\nfunction revealRegion(board, location) {\n  recur(location)\n  visited.clear()\n  return board\n\n  function recur(location) {\n    let cell = getCell(board, location)\n    if (visited.has(cell)) return; else visited.add(cell)\n    // Main logic:\n    cell.revealed = true\n    if (0 === cell.adjacentBombCount)\n      forEachAdjacent(board, location, (adjacent) => {\n        if (!adjacent.flagged) recur(adjacent.location)\n      })\n  }\n}\n\nfunction forEachAdjacent(board, location, fn) {\n  let [row, column] = location\n  for (let c = column - 1; c <= column + 1; c++) {\n    for (let r = row - 1; r <= row + 1; r++) {\n      let inBounds =\n           0 <= c && c < board.width\n        && 0 <= r && r < board.height\n      let notCenter = c !== column || r !== row\n      if (inBounds && notCenter)\n        fn(board.rows[r][c], [r, c], board)\n    }\n  }\n}","import React from 'react'\nimport {useEffect, useReducer, useState} from \"./hooks\"\nimport Board from \"./components/Board\"\nimport Display from \"./components/Display\"\nimport * as B from \"./bombsniffer\"\nimport {Dispatch, GameDone} from \"./context\"\nimport \"./App.css\"\n\nlet boardSpec = {width: 9, height: 9, bombCount: 10}\n// let boardSpec = {width: 3, height: 3, bombCount: 1}\nfunction reset() {\n  return {\n    board: B.makeBoard(boardSpec),\n    startTime: null,\n    endTime: null\n  }\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'select': {\n      let board = B.select(B.copy(state.board), action.location)\n      let startTime = state.startTime                      ? state.startTime : action.time\n      let endTime   = (state.endTime  || !B.isDone(board)) ? state.endTime   : action.time\n      return {...state, board, startTime, endTime}\n    }\n    case 'toggleFlagged': {\n      let board = B.toggleFlagged(B.copy(state.board), action.location)\n      let endTime   = (state.endTime  || !B.isDone(board)) ? state.endTime : action.time\n      return {...state, board, endTime}\n    }\n    case 'newGame':\n      return reset()\n    default:\n      throw Error(\"Unknown action type\")\n  }\n}\n\nfunction App() {\n  let [state, dispatch] = useReducer(reducer, reset())\n  let currentTime = useCurrentTime()\n  let elapsedSeconds =\n    state.startTime\n      ? Math.floor(((state.endTime || currentTime) - state.startTime) / 1000)\n      : 0\n  let bombsRemaining = boardSpec.bombCount - B.getCounts(state.board).flagged\n  return (\n    currentTime &&\n    <Dispatch.Provider value={dispatch}>\n      <GameDone.Provider value={B.isDone(state.board)}>\n        <div className=\"bombsniffer\">\n          <Display {...{elapsedSeconds, bombsRemaining}} />\n          <Board rows={state.board.rows} />\n        </div>\n      </GameDone.Provider>\n    </Dispatch.Provider>\n  )\n}\n\nfunction useCurrentTime() {\n  let [currentTime, setCurrentTime] = useState(Date.now())\n  useEffect(() => {\n    let request = requestAnimationFrame(updateTime)\n    function updateTime() {\n      request = requestAnimationFrame(updateTime)\n      setCurrentTime(Date.now())\n    }\n    return () => request && cancelAnimationFrame(request)\n  }, [])\n  return currentTime\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {WithDevtools} from \"./hooks\"\n\nReactDOM.render(\n  <WithDevtools>\n    <App />\n  </WithDevtools>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}